<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Diagrammes et Visualisations on DDD Adventure</title>
    <link>//localhost:41733/diagrams/</link>
    <description>Recent content in Diagrammes et Visualisations on DDD Adventure</description>
    <generator>Hugo</generator>
    <language>fr-fr</language>
    <lastBuildDate>Mon, 01 Jan 0001 00:00:00 +0000</lastBuildDate>
    <atom:link href="//localhost:41733/diagrams/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>//localhost:41733/diagrams/architecture-generale/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:41733/diagrams/architecture-generale/</guid>
      <description>&lt;h1 id=&#34;architecture-générale-du-projet-gyroscops-cloud&#34;&gt;Architecture Générale du Projet Gyroscops Cloud&lt;/h1&gt;&#xA;&lt;h2 id=&#34;vue-densemble-de-larchitecture&#34;&gt;Vue d&amp;rsquo;ensemble de l&amp;rsquo;Architecture&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;graph TB&#xA;    subgraph &amp;#34;Frontend Layer&amp;#34;&#xA;        PWA[PWA React Admin]&#xA;        API_CLIENT[API Client]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;API Platform Layer&amp;#34;&#xA;        API_GATEWAY[API Gateway]&#xA;        AUTH[Authentication]&#xA;        AUTHZ[Authorization]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Domain Layer&amp;#34;&#xA;        subgraph &amp;#34;Authentication Domain&amp;#34;&#xA;            USER[User]&#xA;            ORG[Organization]&#xA;            ROLE[Role]&#xA;        end&#xA;        &#xA;        subgraph &amp;#34;Payment Domain&amp;#34;&#xA;            PAYMENT[Payment]&#xA;            SUBSCRIPTION[Subscription]&#xA;            BILLING[Billing]&#xA;        end&#xA;        &#xA;        subgraph &amp;#34;Integration Domain&amp;#34;&#xA;            INTEGRATION[Integration]&#xA;            WORKFLOW[Workflow]&#xA;            CONNECTOR[Connector]&#xA;        end&#xA;        &#xA;        subgraph &amp;#34;Monitoring Domain&amp;#34;&#xA;            METRICS[Metrics]&#xA;            ALERT[Alert]&#xA;            HEALTH[Health Check]&#xA;        end&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Infrastructure Layer&amp;#34;&#xA;        subgraph &amp;#34;Repositories&amp;#34;&#xA;            SQL_REPO[SQL Repository]&#xA;            API_REPO[API Repository]&#xA;            ES_REPO[ElasticSearch Repository]&#xA;            MONGO_REPO[MongoDB Repository]&#xA;            MEMORY_REPO[In-Memory Repository]&#xA;        end&#xA;        &#xA;        subgraph &amp;#34;External Services&amp;#34;&#xA;            KEYCLOAK[Keycloak]&#xA;            EXTERNAL_API[External APIs]&#xA;            DATABASE[(Database)]&#xA;            ELASTICSEARCH[(ElasticSearch)]&#xA;            MONGODB[(MongoDB)]&#xA;        end&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Cross-Cutting Concerns&amp;#34;&#xA;        EVENT_BUS[Event Bus]&#xA;        LOGGING[Logging]&#xA;        METRICS_COLLECTOR[Metrics Collector]&#xA;        AUDIT[Audit]&#xA;    end&#xA;    &#xA;    PWA --&amp;gt; API_CLIENT&#xA;    API_CLIENT --&amp;gt; API_GATEWAY&#xA;    API_GATEWAY --&amp;gt; AUTH&#xA;    API_GATEWAY --&amp;gt; AUTHZ&#xA;    &#xA;    AUTH --&amp;gt; USER&#xA;    AUTHZ --&amp;gt; ROLE&#xA;    &#xA;    API_GATEWAY --&amp;gt; PAYMENT&#xA;    API_GATEWAY --&amp;gt; INTEGRATION&#xA;    API_GATEWAY --&amp;gt; METRICS&#xA;    &#xA;    PAYMENT --&amp;gt; SQL_REPO&#xA;    INTEGRATION --&amp;gt; API_REPO&#xA;    METRICS --&amp;gt; ES_REPO&#xA;    &#xA;    SQL_REPO --&amp;gt; DATABASE&#xA;    API_REPO --&amp;gt; EXTERNAL_API&#xA;    ES_REPO --&amp;gt; ELASTICSEARCH&#xA;    MONGO_REPO --&amp;gt; MONGODB&#xA;    &#xA;    EVENT_BUS --&amp;gt; LOGGING&#xA;    EVENT_BUS --&amp;gt; METRICS_COLLECTOR&#xA;    EVENT_BUS --&amp;gt; AUDIT&#xA;    &#xA;    style PWA fill:#e1f5fe&#xA;    style API_GATEWAY fill:#fff3e0&#xA;    style PAYMENT fill:#e8f5e8&#xA;    style INTEGRATION fill:#fff8e1&#xA;    style METRICS fill:#f3e5f5&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;architecture-cqrs-avec-event-sourcing&#34;&gt;Architecture CQRS avec Event Sourcing&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;graph TB&#xA;    subgraph &amp;#34;Command Side&amp;#34;&#xA;        COMMAND[Command]&#xA;        COMMAND_HANDLER[Command Handler]&#xA;        AGGREGATE[Aggregate]&#xA;        EVENT_STORE[Event Store]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Query Side&amp;#34;&#xA;        QUERY[Query]&#xA;        QUERY_HANDLER[Query Handler]&#xA;        READ_MODEL[Read Model]&#xA;        PROJECTION[Projection]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Event Bus&amp;#34;&#xA;        EVENT_BUS[Event Bus]&#xA;        EVENT_HANDLER[Event Handler]&#xA;    end&#xA;    &#xA;    COMMAND --&amp;gt; COMMAND_HANDLER&#xA;    COMMAND_HANDLER --&amp;gt; AGGREGATE&#xA;    AGGREGATE --&amp;gt; EVENT_STORE&#xA;    AGGREGATE --&amp;gt; EVENT_BUS&#xA;    &#xA;    EVENT_BUS --&amp;gt; EVENT_HANDLER&#xA;    EVENT_HANDLER --&amp;gt; PROJECTION&#xA;    PROJECTION --&amp;gt; READ_MODEL&#xA;    &#xA;    QUERY --&amp;gt; QUERY_HANDLER&#xA;    QUERY_HANDLER --&amp;gt; READ_MODEL&#xA;    &#xA;    style COMMAND fill:#ffeb3b&#xA;    style QUERY fill:#4caf50&#xA;    style EVENT_BUS fill:#ff9800&#xA;    style AGGREGATE fill:#e91e63&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;architecture-des-repositories&#34;&gt;Architecture des Repositories&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;graph TB&#xA;    subgraph &amp;#34;Repository Interfaces&amp;#34;&#xA;        CMD_REPO[Command Repository]&#xA;        QUERY_REPO[Query Repository]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Repository Implementations&amp;#34;&#xA;        SQL_CMD[SQL Command Repository]&#xA;        SQL_QUERY[SQL Query Repository]&#xA;        API_CMD[API Command Repository]&#xA;        API_QUERY[API Query Repository]&#xA;        ES_CMD[ElasticSearch Command Repository]&#xA;        ES_QUERY[ElasticSearch Query Repository]&#xA;        MONGO_CMD[MongoDB Command Repository]&#xA;        MONGO_QUERY[MongoDB Query Repository]&#xA;        MEMORY_CMD[In-Memory Command Repository]&#xA;        MEMORY_QUERY[In-Memory Query Repository]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Data Sources&amp;#34;&#xA;        DATABASE[(SQL Database)]&#xA;        EXTERNAL_API[External APIs]&#xA;        ELASTICSEARCH[(ElasticSearch)]&#xA;        MONGODB[(MongoDB)]&#xA;        MEMORY[(In-Memory)]&#xA;    end&#xA;    &#xA;    CMD_REPO --&amp;gt; SQL_CMD&#xA;    CMD_REPO --&amp;gt; API_CMD&#xA;    CMD_REPO --&amp;gt; ES_CMD&#xA;    CMD_REPO --&amp;gt; MONGO_CMD&#xA;    CMD_REPO --&amp;gt; MEMORY_CMD&#xA;    &#xA;    QUERY_REPO --&amp;gt; SQL_QUERY&#xA;    QUERY_REPO --&amp;gt; API_QUERY&#xA;    QUERY_REPO --&amp;gt; ES_QUERY&#xA;    QUERY_REPO --&amp;gt; MONGO_QUERY&#xA;    QUERY_REPO --&amp;gt; MEMORY_QUERY&#xA;    &#xA;    SQL_CMD --&amp;gt; DATABASE&#xA;    SQL_QUERY --&amp;gt; DATABASE&#xA;    API_CMD --&amp;gt; EXTERNAL_API&#xA;    API_QUERY --&amp;gt; EXTERNAL_API&#xA;    ES_CMD --&amp;gt; ELASTICSEARCH&#xA;    ES_QUERY --&amp;gt; ELASTICSEARCH&#xA;    MONGO_CMD --&amp;gt; MONGODB&#xA;    MONGO_QUERY --&amp;gt; MONGODB&#xA;    MEMORY_CMD --&amp;gt; MEMORY&#xA;    MEMORY_QUERY --&amp;gt; MEMORY&#xA;    &#xA;    style CMD_REPO fill:#ff5722&#xA;    style QUERY_REPO fill:#4caf50&#xA;    style DATABASE fill:#2196f3&#xA;    style EXTERNAL_API fill:#ff9800&#xA;    style ELASTICSEARCH fill:#9c27b0&#xA;    style MONGODB fill:#4caf50&#xA;    style MEMORY fill:#607d8b&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;flux-de-données-avec-event-sourcing&#34;&gt;Flux de Données avec Event Sourcing&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;sequenceDiagram&#xA;    participant Client&#xA;    participant API&#xA;    participant CommandHandler&#xA;    participant Aggregate&#xA;    participant EventStore&#xA;    participant EventBus&#xA;    participant Projection&#xA;    participant ReadModel&#xA;    participant QueryHandler&#xA;    &#xA;    Client-&amp;gt;&amp;gt;API: POST /api/payments&#xA;    API-&amp;gt;&amp;gt;CommandHandler: CreatePaymentCommand&#xA;    CommandHandler-&amp;gt;&amp;gt;Aggregate: createPayment()&#xA;    Aggregate-&amp;gt;&amp;gt;EventStore: save(PaymentCreated)&#xA;    Aggregate-&amp;gt;&amp;gt;EventBus: publish(PaymentCreated)&#xA;    EventBus-&amp;gt;&amp;gt;Projection: handle(PaymentCreated)&#xA;    Projection-&amp;gt;&amp;gt;ReadModel: update()&#xA;    CommandHandler-&amp;gt;&amp;gt;API: PaymentCreated&#xA;    API-&amp;gt;&amp;gt;Client: 201 Created&#xA;    &#xA;    Client-&amp;gt;&amp;gt;API: GET /api/payments&#xA;    API-&amp;gt;&amp;gt;QueryHandler: GetPaymentsQuery&#xA;    QueryHandler-&amp;gt;&amp;gt;ReadModel: findPayments()&#xA;    ReadModel-&amp;gt;&amp;gt;QueryHandler: Payment[]&#xA;    QueryHandler-&amp;gt;&amp;gt;API: Payment[]&#xA;    API-&amp;gt;&amp;gt;Client: 200 OK&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;architecture-de-sécurité&#34;&gt;Architecture de Sécurité&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;graph TB&#xA;    subgraph &amp;#34;Frontend Security&amp;#34;&#xA;        TOKEN[JWT Token]&#xA;        REFRESH[Refresh Token]&#xA;        STORAGE[Local Storage]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;API Security&amp;#34;&#xA;        MIDDLEWARE[Security Middleware]&#xA;        AUTH_SERVICE[Authentication Service]&#xA;        AUTHZ_SERVICE[Authorization Service]&#xA;        VOTER[Voter]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;External Security&amp;#34;&#xA;        KEYCLOAK[Keycloak]&#xA;        RBAC[RBAC]&#xA;        ABAC[ABAC]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Audit &amp;amp; Monitoring&amp;#34;&#xA;        AUDIT_LOG[Audit Log]&#xA;        SECURITY_METRICS[Security Metrics]&#xA;        ALERT[Security Alert]&#xA;    end&#xA;    &#xA;    TOKEN --&amp;gt; MIDDLEWARE&#xA;    REFRESH --&amp;gt; AUTH_SERVICE&#xA;    STORAGE --&amp;gt; TOKEN&#xA;    &#xA;    MIDDLEWARE --&amp;gt; AUTH_SERVICE&#xA;    MIDDLEWARE --&amp;gt; AUTHZ_SERVICE&#xA;    AUTHZ_SERVICE --&amp;gt; VOTER&#xA;    &#xA;    AUTH_SERVICE --&amp;gt; KEYCLOAK&#xA;    AUTHZ_SERVICE --&amp;gt; RBAC&#xA;    AUTHZ_SERVICE --&amp;gt; ABAC&#xA;    &#xA;    MIDDLEWARE --&amp;gt; AUDIT_LOG&#xA;    AUTH_SERVICE --&amp;gt; SECURITY_METRICS&#xA;    AUTHZ_SERVICE --&amp;gt; ALERT&#xA;    &#xA;    style TOKEN fill:#ffeb3b&#xA;    style MIDDLEWARE fill:#ff5722&#xA;    style KEYCLOAK fill:#2196f3&#xA;    style AUDIT_LOG fill:#9c27b0&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;architecture-frontend&#34;&gt;Architecture Frontend&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;graph TB&#xA;    subgraph &amp;#34;UI Components&amp;#34;&#xA;        PAGES[Pages]&#xA;        COMPONENTS[Components]&#xA;        FORMS[Forms]&#xA;        LISTS[Lists]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;State Management&amp;#34;&#xA;        REDUX[Redux Store]&#xA;        SLICES[Slices]&#xA;        ACTIONS[Actions]&#xA;        SELECTORS[Selectors]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;API Layer&amp;#34;&#xA;        API_CLIENT[API Client]&#xA;        SERVICES[Services]&#xA;        HOOKS[Custom Hooks]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Routing &amp;amp; Navigation&amp;#34;&#xA;        ROUTER[React Router]&#xA;        GUARDS[Route Guards]&#xA;        NAVIGATION[Navigation]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;External Dependencies&amp;#34;&#xA;        BACKEND[Backend API]&#xA;        KEYCLOAK[Keycloak]&#xA;        EXTERNAL[External APIs]&#xA;    end&#xA;    &#xA;    PAGES --&amp;gt; COMPONENTS&#xA;    COMPONENTS --&amp;gt; FORMS&#xA;    COMPONENTS --&amp;gt; LISTS&#xA;    &#xA;    PAGES --&amp;gt; REDUX&#xA;    COMPONENTS --&amp;gt; SELECTORS&#xA;    FORMS --&amp;gt; ACTIONS&#xA;    LISTS --&amp;gt; ACTIONS&#xA;    &#xA;    REDUX --&amp;gt; SLICES&#xA;    SLICES --&amp;gt; ACTIONS&#xA;    SLICES --&amp;gt; SELECTORS&#xA;    &#xA;    ACTIONS --&amp;gt; API_CLIENT&#xA;    SELECTORS --&amp;gt; SERVICES&#xA;    HOOKS --&amp;gt; API_CLIENT&#xA;    &#xA;    API_CLIENT --&amp;gt; SERVICES&#xA;    SERVICES --&amp;gt; HOOKS&#xA;    &#xA;    ROUTER --&amp;gt; GUARDS&#xA;    GUARDS --&amp;gt; NAVIGATION&#xA;    NAVIGATION --&amp;gt; PAGES&#xA;    &#xA;    API_CLIENT --&amp;gt; BACKEND&#xA;    API_CLIENT --&amp;gt; KEYCLOAK&#xA;    SERVICES --&amp;gt; EXTERNAL&#xA;    &#xA;    style PAGES fill:#e1f5fe&#xA;    style REDUX fill:#fff3e0&#xA;    style API_CLIENT fill:#e8f5e8&#xA;    style ROUTER fill:#fff8e1&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title></title>
      <link>//localhost:41733/diagrams/event-storming-process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:41733/diagrams/event-storming-process/</guid>
      <description>&lt;h1 id=&#34;processus-event-storming&#34;&gt;Processus Event Storming&lt;/h1&gt;&#xA;&lt;h2 id=&#34;atelier-event-storming---étapes&#34;&gt;Atelier Event Storming - Étapes&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;graph TD&#xA;    A[Préparation] --&amp;gt; B[Session 1: Découverte]&#xA;    B --&amp;gt; C[Session 2: Affinage]&#xA;    C --&amp;gt; D[Session 3: Architecture]&#xA;    D --&amp;gt; E[Documentation]&#xA;    &#xA;    subgraph &amp;#34;Préparation&amp;#34;&#xA;        A1[Inviter les participants]&#xA;        A2[Préparer le matériel]&#xA;        A3[Définir les objectifs]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Session 1: Découverte&amp;#34;&#xA;        B1[Identifier les événements métier]&#xA;        B2[Identifier les commandes]&#xA;        B3[Identifier les acteurs]&#xA;        B4[Identifier les règles métier]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Session 2: Affinement&amp;#34;&#xA;        C1[Grouper les événements]&#xA;        C2[Définir les agrégats]&#xA;        C3[Identifier les bounded contexts]&#xA;        C4[Valider les règles métier]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Session 3: Architecture&amp;#34;&#xA;        D1[Définir l&amp;#39;architecture]&#xA;        D2[Identifier les intégrations]&#xA;        D3[Planifier l&amp;#39;implémentation]&#xA;        D4[Prioriser les fonctionnalités]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Documentation&amp;#34;&#xA;        E1[Créer les diagrammes]&#xA;        E2[Rédiger les spécifications]&#xA;        E3[Partager les résultats]&#xA;        E4[Planifier les prochaines étapes]&#xA;    end&#xA;    &#xA;    A --&amp;gt; A1&#xA;    A --&amp;gt; A2&#xA;    A --&amp;gt; A3&#xA;    &#xA;    B --&amp;gt; B1&#xA;    B --&amp;gt; B2&#xA;    B --&amp;gt; B3&#xA;    B --&amp;gt; B4&#xA;    &#xA;    C --&amp;gt; C1&#xA;    C --&amp;gt; C2&#xA;    C --&amp;gt; C3&#xA;    C --&amp;gt; C4&#xA;    &#xA;    D --&amp;gt; D1&#xA;    D --&amp;gt; D2&#xA;    D --&amp;gt; D3&#xA;    D --&amp;gt; D4&#xA;    &#xA;    E --&amp;gt; E1&#xA;    E --&amp;gt; E2&#xA;    E --&amp;gt; E3&#xA;    E --&amp;gt; E4&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;exemple-devent-storming---système-de-paiement&#34;&gt;Exemple d&amp;rsquo;Event Storming - Système de Paiement&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;graph TB&#xA;    subgraph &amp;#34;Acteurs&amp;#34;&#xA;        CUSTOMER[Customer]&#xA;        MERCHANT[Merchant]&#xA;        PAYMENT_GATEWAY[Payment Gateway]&#xA;        ADMIN[Admin]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Commandes&amp;#34;&#xA;        CREATE_PAYMENT[Create Payment]&#xA;        PROCESS_PAYMENT[Process Payment]&#xA;        REFUND_PAYMENT[Refund Payment]&#xA;        CANCEL_PAYMENT[Cancel Payment]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Événements&amp;#34;&#xA;        PAYMENT_CREATED[Payment Created]&#xA;        PAYMENT_PROCESSED[Payment Processed]&#xA;        PAYMENT_FAILED[Payment Failed]&#xA;        PAYMENT_REFUNDED[Payment Refunded]&#xA;        PAYMENT_CANCELLED[Payment Cancelled]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Règles Métier&amp;#34;&#xA;        VALIDATE_AMOUNT[Amount &amp;gt; 0]&#xA;        VALIDATE_CURRENCY[Valid Currency]&#xA;        CHECK_BALANCE[Sufficient Balance]&#xA;        VERIFY_MERCHANT[Merchant Verified]&#xA;    end&#xA;    &#xA;    CUSTOMER --&amp;gt; CREATE_PAYMENT&#xA;    MERCHANT --&amp;gt; PROCESS_PAYMENT&#xA;    ADMIN --&amp;gt; REFUND_PAYMENT&#xA;    CUSTOMER --&amp;gt; CANCEL_PAYMENT&#xA;    &#xA;    CREATE_PAYMENT --&amp;gt; PAYMENT_CREATED&#xA;    PROCESS_PAYMENT --&amp;gt; PAYMENT_PROCESSED&#xA;    PROCESS_PAYMENT --&amp;gt; PAYMENT_FAILED&#xA;    REFUND_PAYMENT --&amp;gt; PAYMENT_REFUNDED&#xA;    CANCEL_PAYMENT --&amp;gt; PAYMENT_CANCELLED&#xA;    &#xA;    VALIDATE_AMOUNT --&amp;gt; CREATE_PAYMENT&#xA;    VALIDATE_CURRENCY --&amp;gt; CREATE_PAYMENT&#xA;    CHECK_BALANCE --&amp;gt; PROCESS_PAYMENT&#xA;    VERIFY_MERCHANT --&amp;gt; PROCESS_PAYMENT&#xA;    &#xA;    style CUSTOMER fill:#e1f5fe&#xA;    style MERCHANT fill:#e8f5e8&#xA;    style PAYMENT_GATEWAY fill:#fff3e0&#xA;    style ADMIN fill:#f3e5f5&#xA;    style CREATE_PAYMENT fill:#ffeb3b&#xA;    style PAYMENT_CREATED fill:#4caf50&#xA;    style VALIDATE_AMOUNT fill:#ff9800&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;bounded-contexts---système-gyroscops-cloud&#34;&gt;Bounded Contexts - Système Gyroscops Cloud&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;graph TB&#xA;    subgraph &amp;#34;Authentication Context&amp;#34;&#xA;        AUTH_USER[User]&#xA;        AUTH_ROLE[Role]&#xA;        AUTH_PERMISSION[Permission]&#xA;        AUTH_SESSION[Session]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Payment Context&amp;#34;&#xA;        PAYMENT[Payment]&#xA;        SUBSCRIPTION[Subscription]&#xA;        BILLING[Billing]&#xA;        INVOICE[Invoice]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Integration Context&amp;#34;&#xA;        INTEGRATION[Integration]&#xA;        WORKFLOW[Workflow]&#xA;        CONNECTOR[Connector]&#xA;        MAPPING[Mapping]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Monitoring Context&amp;#34;&#xA;        METRICS[Metrics]&#xA;        ALERT[Alert]&#xA;        LOG[Log]&#xA;        HEALTH[Health Check]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Organization Context&amp;#34;&#xA;        ORG[Organization]&#xA;        TEAM[Team]&#xA;        PROJECT[Project]&#xA;        SETTINGS[Settings]&#xA;    end&#xA;    &#xA;    AUTH_USER -.-&amp;gt; PAYMENT&#xA;    AUTH_USER -.-&amp;gt; INTEGRATION&#xA;    AUTH_USER -.-&amp;gt; METRICS&#xA;    AUTH_USER -.-&amp;gt; ORG&#xA;    &#xA;    PAYMENT -.-&amp;gt; INTEGRATION&#xA;    INTEGRATION -.-&amp;gt; METRICS&#xA;    ORG -.-&amp;gt; PAYMENT&#xA;    ORG -.-&amp;gt; INTEGRATION&#xA;    &#xA;    style AUTH_USER fill:#e1f5fe&#xA;    style PAYMENT fill:#e8f5e8&#xA;    style INTEGRATION fill:#fff3e0&#xA;    style METRICS fill:#f3e5f5&#xA;    style ORG fill:#fff8e1&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;flux-dévénements---création-de-paiement&#34;&gt;Flux d&amp;rsquo;Événements - Création de Paiement&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;sequenceDiagram&#xA;    participant C as Customer&#xA;    participant API as API Gateway&#xA;    participant CH as Command Handler&#xA;    participant A as Payment Aggregate&#xA;    participant ES as Event Store&#xA;    participant EB as Event Bus&#xA;    participant P as Projection&#xA;    participant RM as Read Model&#xA;    participant QH as Query Handler&#xA;    &#xA;    C-&amp;gt;&amp;gt;API: POST /api/payments&#xA;    API-&amp;gt;&amp;gt;CH: CreatePaymentCommand&#xA;    CH-&amp;gt;&amp;gt;A: createPayment(amount, currency, customer)&#xA;    &#xA;    A-&amp;gt;&amp;gt;A: validateAmount()&#xA;    A-&amp;gt;&amp;gt;A: validateCurrency()&#xA;    A-&amp;gt;&amp;gt;A: validateCustomer()&#xA;    &#xA;    A-&amp;gt;&amp;gt;ES: save(PaymentCreated)&#xA;    A-&amp;gt;&amp;gt;EB: publish(PaymentCreated)&#xA;    &#xA;    EB-&amp;gt;&amp;gt;P: handle(PaymentCreated)&#xA;    P-&amp;gt;&amp;gt;RM: updatePaymentList()&#xA;    &#xA;    A-&amp;gt;&amp;gt;CH: PaymentCreated&#xA;    CH-&amp;gt;&amp;gt;API: PaymentCreated&#xA;    API-&amp;gt;&amp;gt;C: 201 Created&#xA;    &#xA;    Note over C,RM: Query pour récupérer la liste&#xA;    C-&amp;gt;&amp;gt;API: GET /api/payments&#xA;    API-&amp;gt;&amp;gt;QH: GetPaymentsQuery&#xA;    QH-&amp;gt;&amp;gt;RM: findPayments()&#xA;    RM-&amp;gt;&amp;gt;QH: Payment[]&#xA;    QH-&amp;gt;&amp;gt;API: Payment[]&#xA;    API-&amp;gt;&amp;gt;C: 200 OK&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;impact-mapping---système-de-paiement&#34;&gt;Impact Mapping - Système de Paiement&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;graph TB&#xA;    subgraph &amp;#34;Objectif Business&amp;#34;&#xA;        OBJ[Augmenter les revenus de 20%]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Acteurs&amp;#34;&#xA;        CUSTOMER[Customer]&#xA;        MERCHANT[Merchant]&#xA;        SUPPORT[Support Team]&#xA;        DEV[Development Team]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Impacts&amp;#34;&#xA;        CUSTOMER_IMPACT[Paiement plus rapide]&#xA;        MERCHANT_IMPACT[Moins de frais]&#xA;        SUPPORT_IMPACT[Moins de tickets]&#xA;        DEV_IMPACT[Développement plus rapide]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Livrables&amp;#34;&#xA;        PAYMENT_API[API de Paiement]&#xA;        DASHBOARD[Dashboard]&#xA;        DOCUMENTATION[Documentation]&#xA;        MONITORING[Monitoring]&#xA;    end&#xA;    &#xA;    OBJ --&amp;gt; CUSTOMER_IMPACT&#xA;    OBJ --&amp;gt; MERCHANT_IMPACT&#xA;    OBJ --&amp;gt; SUPPORT_IMPACT&#xA;    OBJ --&amp;gt; DEV_IMPACT&#xA;    &#xA;    CUSTOMER_IMPACT --&amp;gt; PAYMENT_API&#xA;    MERCHANT_IMPACT --&amp;gt; DASHBOARD&#xA;    SUPPORT_IMPACT --&amp;gt; DOCUMENTATION&#xA;    DEV_IMPACT --&amp;gt; MONITORING&#xA;    &#xA;    CUSTOMER --&amp;gt; CUSTOMER_IMPACT&#xA;    MERCHANT --&amp;gt; MERCHANT_IMPACT&#xA;    SUPPORT --&amp;gt; SUPPORT_IMPACT&#xA;    DEV --&amp;gt; DEV_IMPACT&#xA;    &#xA;    style OBJ fill:#ff5722&#xA;    style CUSTOMER fill:#e1f5fe&#xA;    style MERCHANT fill:#e8f5e8&#xA;    style SUPPORT fill:#fff3e0&#xA;    style DEV fill:#f3e5f5&#xA;    style PAYMENT_API fill:#4caf50&#xA;    style DASHBOARD fill:#ff9800&#xA;    style DOCUMENTATION fill:#9c27b0&#xA;    style MONITORING fill:#607d8b&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;example-mapping---création-de-paiement&#34;&gt;Example Mapping - Création de Paiement&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;graph TB&#xA;    subgraph &amp;#34;Règle Métier&amp;#34;&#xA;        RULE[Un paiement doit avoir un montant positif]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Exemples&amp;#34;&#xA;        EX1[✅ Montant: 100.00€ → Paiement créé]&#xA;        EX2[❌ Montant: -50.00€ → Erreur de validation]&#xA;        EX3[❌ Montant: 0.00€ → Erreur de validation]&#xA;        EX4[❌ Montant: null → Erreur de validation]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Questions&amp;#34;&#xA;        Q1[Que se passe-t-il si le montant est trop élevé?]&#xA;        Q2[Que se passe-t-il si la devise n&amp;#39;est pas supportée?]&#xA;        Q3[Que se passe-t-il si le client n&amp;#39;existe pas?]&#xA;    end&#xA;    &#xA;    subgraph &amp;#34;Tests d&amp;#39;Acceptation&amp;#34;&#xA;        T1[Given: Montant valide&amp;lt;br/&amp;gt;When: Créer le paiement&amp;lt;br/&amp;gt;Then: Paiement créé avec succès]&#xA;        T2[Given: Montant négatif&amp;lt;br/&amp;gt;When: Créer le paiement&amp;lt;br/&amp;gt;Then: Erreur de validation]&#xA;        T3[Given: Montant zéro&amp;lt;br/&amp;gt;When: Créer le paiement&amp;lt;br/&amp;gt;Then: Erreur de validation]&#xA;        T4[Given: Montant null&amp;lt;br/&amp;gt;When: Créer le paiement&amp;lt;br/&amp;gt;Then: Erreur de validation]&#xA;    end&#xA;    &#xA;    RULE --&amp;gt; EX1&#xA;    RULE --&amp;gt; EX2&#xA;    RULE --&amp;gt; EX3&#xA;    RULE --&amp;gt; EX4&#xA;    &#xA;    RULE --&amp;gt; Q1&#xA;    RULE --&amp;gt; Q2&#xA;    RULE --&amp;gt; Q3&#xA;    &#xA;    EX1 --&amp;gt; T1&#xA;    EX2 --&amp;gt; T2&#xA;    EX3 --&amp;gt; T3&#xA;    EX4 --&amp;gt; T4&#xA;    &#xA;    style RULE fill:#ff5722&#xA;    style EX1 fill:#4caf50&#xA;    style EX2 fill:#f44336&#xA;    style EX3 fill:#f44336&#xA;    style EX4 fill:#f44336&#xA;    style Q1 fill:#ff9800&#xA;    style Q2 fill:#ff9800&#xA;    style Q3 fill:#ff9800&#xA;    style T1 fill:#e8f5e8&#xA;    style T2 fill:#ffebee&#xA;    style T3 fill:#ffebee&#xA;    style T4 fill:#ffebee&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>
